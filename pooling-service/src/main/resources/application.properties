# Pooling Service Configuration (Cloud Optimized)
server.port=${PORT:8086}
spring.application.name=pooling-service
spring.main.banner-mode=console

# MongoDB Atlas Configuration (Cloud)
spring.data.mongodb.uri=mongodb+srv://2022cs056:dH4aTFn3IOerWlVZ@cluster0.9ccambx.mongodb.net/islandhop_pooling?retryWrites=true&w=majority
spring.data.mongodb.database=islandhop_pooling
spring.data.mongodb.auto-index-creation=true

# External Service URLs (Cloud)
services.trip-planning.url=${TRIP_PLANNING_SERVICE_URL:https://your-trip-planning-service.herokuapp.com/api}
services.user-services.url=${USER_SERVICES_URL:https://your-user-services.herokuapp.com/api/v1}
services.trip-service.base-url=${TRIP_SERVICE_URL:http://localhost:8082}
services.user-service.base-url=${USER_SERVICE_URL:http://localhost:8083}
app.itinerary-service.url=http://localhost:8084 # Replace with your actual Trip Planning Service URL if different

# Kafka Configuration (Cloud)
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:pkc-12576z.us-west2.gcp.confluent.cloud:9092}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.properties.security.protocol=SASL_SSL
spring.kafka.properties.sasl.mechanism=PLAIN
spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username='${KAFKA_USERNAME:your-kafka-username}' password='${KAFKA_PASSWORD:your-kafka-password}';

# Pooling Algorithm Configuration
pooling.timeline.flexibility-days=2
pooling.geographic.max-distance-km=50
pooling.compatibility.min-score=0.6
pooling.pool.max-size=12
pooling.pool.min-size=2

# Enhanced Compatibility Scoring Configuration
pooling.compatibility.weights.baseCity=0.5
pooling.compatibility.weights.budget=0.2
pooling.compatibility.weights.dates=0.1
pooling.compatibility.weights.activities=0.1
pooling.compatibility.weights.terrains=0.1

# Legacy weights for backward compatibility
pooling.compatibility.weights.destinations=0.4
pooling.compatibility.weights.preferences=0.3

# Group Size Configuration
pooling.max-members.min=2
pooling.max-members.max=20

# Logging Configuration (Cloud Optimized)
logging.level.com.islandhop.pooling=INFO
logging.level.org.springframework.web.reactive.function.client=WARN
logging.level.org.springframework.data.mongodb=INFO
logging.level.org.springframework.kafka=WARN
logging.level.org.mongodb.driver=WARN
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# Cache Configuration
spring.cache.type=simple
spring.cache.cache-names=poolingGroups,userProfiles,tripSummaries

# Actuator Configuration (Health Checks)
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized
management.metrics.export.prometheus.enabled=false

# Performance Tuning
spring.task.execution.pool.core-size=5
spring.task.execution.pool.max-size=20
spring.task.execution.pool.queue-capacity=50

# OpenAPI Documentation
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operations-sorter=alpha
springdoc.swagger-ui.tags-sorter=alpha

# Firebase Authentication (handled by another microservice)
# Frontend sends userId in request body - no session authentication needed
app.authentication.type=firebase-delegated
app.authentication.user-id-header=X-User-ID
app.authentication.required=false

# Connection Pool Settings (Cloud Optimized)
spring.data.mongodb.options.max-connection-pool-size=20
spring.data.mongodb.options.min-connection-pool-size=5
spring.data.mongodb.options.max-connection-idle-time=60000
spring.data.mongodb.options.max-connection-life-time=120000

# HTTP Client Configuration
spring.web.client.connect-timeout=30s
spring.web.client.read-timeout=60s
