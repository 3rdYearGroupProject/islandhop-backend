database:
  url: jdbc:postgresql://<YOUR_POSTGRES_HOST>:<YOUR_POSTGRES_PORT>/<YOUR_DATABASE_NAME>
  username: <YOUR_DATABASE_USERNAME>
  password: <YOUR_DATABASE_PASSWORD>
  driver-class-name: org.postgresql.Driver

spring:
  datasource:
    url: ${database.url}
    username: ${database.username}
    password: ${database.password}
    driver-class-name: ${database.driver-class-name}
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true

ml:
  model:
    endpoint: <YOUR_ML_MODEL_ENDPOINT>
    threshold: 0.5

# Gemini AI Configuration
gemini:
  api:
    key: ${GEMINI_API_KEY:your-gemini-api-key-here}
    endpoint: https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent
    timeout: 30
  model:
    name: gemini-pro
    temperature: 0.1
    max-tokens: 150
  toxicity:
    threshold:
      inappropriate: 3.0 # Below 3 = banned
      pending-lower: 3.0 # 3-7 = pending review
      pending-upper: 7.0
      approved: 7.0 # Above 7 = approved

server:
  port: 8080

logging:
  level:
    root: INFO
    com.islandhop.reviewservice: DEBUG
    com.islandhop.reviewservice.service.GeminiAIService: DEBUG
